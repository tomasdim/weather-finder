{"version":3,"sources":["App.js","index.js"],"names":["API","process","dateBuilder","d","date","String","window","Date","slice","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","key","fetch","then","res","json","result","onClick","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","name","sys","country","Math","round","alt","src","icon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAGMA,EACCC,mCADDD,EAEE,2CAEFE,EAAc,SAACC,GACrB,IAAIC,EAAOC,OAAO,IAAIC,OAAOC,MAE7B,OADAH,EAAOA,EAAKI,MAAM,EAAE,KAmELC,MA/Df,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAsBA,OACE,qBAAKC,UAAmC,oBAAhBF,EAAQG,MAAyBH,EAAQG,KAAKC,KAAO,GAAK,WAAoB,MAAtG,SACE,iCACE,qBAAKF,UAAU,QAAf,4BACA,sBAAKA,UAAU,aAAf,UACE,uBACAG,KAAK,OACLH,UAAU,aACVI,YAAY,YACZC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WA/BO,SAAAH,GACC,UAAVA,EAAEI,KACJC,MAAM,GAAD,OAAI1B,EAAJ,qBAAyBW,EAAzB,+BAAqDX,IACzD2B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJhB,EAAWgB,GACXlB,EAAS,UA4BP,wBAAQG,UAAU,kBAAkBgB,QAxBzB,kBACjBC,UAAUC,YAAYC,oBAAmB,SAACC,GACpCT,MAAM,GAAD,OAAI1B,EAAJ,uBAA2BmC,EAASC,OAAOC,SAA3C,gBAA2DF,EAASC,OAAOE,UAA3E,+BAA2GtC,IAC/G2B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJhB,EAAWgB,GACXlB,EAAS,WAkBX,6BAEuB,oBAAhBC,EAAQG,KACjB,gCACE,sBAAKD,UAAU,eAAf,UACA,sBAAKA,UAAU,WAAf,UAA2BF,EAAQ0B,KAAnC,KAA2C1B,EAAQ2B,IAAIC,WACrD,qBAAK1B,UAAU,OAAf,SAAuBb,EAAY,IAAIK,WAE3C,sBAAKQ,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UACG2B,KAAKC,MAAM9B,EAAQG,KAAKC,MAD3B,WAGA,sBAAKF,UAAU,UAAf,UACA,qBAAM6B,IAAI,eAAeC,IAAG,0CAAqChC,EAAQA,QAAQ,GAAGiC,KAAxD,UACzBjC,EAAQA,QAAQ,GAAGG,KACpB,qBAAM4B,IAAI,eAAeC,IAAG,0CAAqChC,EAAQA,QAAQ,GAAGiC,KAAxD,mBAI5B,SCjEZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.95c51667.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport './App.css';\n\nconst API = {\n  key: process.env.REACT_APP_API_KEY,\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\nconst dateBuilder = (d)=>{\nlet date = String(new window.Date())\ndate = date.slice(3,15)\nreturn date\n}\n\nfunction App() {\n  const [query, setQuery] = useState('')\n  const [weather, setWeather] = useState({})\n\n  const search = e =>{\n    if (e.key === \"Enter\"){\n      fetch(`${API.base}weather?q=${query}&units=metric&APPID=${API.key}`)\n      .then(res => res.json())\n      .then(result => {\n        setWeather(result)\n        setQuery('')})\n    }\n  }\n\n  const getLocation= () =>(\n    navigator.geolocation.getCurrentPosition((position)=>{\n          fetch(`${API.base}weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&units=metric&APPID=${API.key}`)\n          .then(res => res.json())\n          .then(result => {\n            setWeather(result)\n            setQuery('')})\n    }\n  ))\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16)? 'App-warm':'App') : 'App'}>\n      <main>\n        <div className=\"title\">Weather Finder</div>\n        <div className=\"search-box\">\n          <input \n          type=\"text\"\n          className=\"search-bar\"\n          placeholder=\"Search...\"\n          onChange={e => setQuery(e.target.value)}\n          value={query}\n          onKeyPress={search}>\n\n          </input>\n          <button className=\"location-button\" onClick={getLocation}>Get Location</button>\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n          <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n        </div>\n        <div className=\"weather-box\">\n          <div className=\"temp\">\n            {Math.round(weather.main.temp)}Â°C\n          </div>\n          <div className=\"weather\">\n          <img  alt=\"weather-icon\" src={`http://openweathermap.org/img/w/${weather.weather[0].icon}.png`}/>\n            {weather.weather[0].main}\n            <img  alt=\"weather-icon\" src={`http://openweathermap.org/img/w/${weather.weather[0].icon}.png`}/>\n          </div>\n        </div>\n        </div>\n        ): ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}